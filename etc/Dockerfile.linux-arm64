# Jetson CUDA 
# https://catalog.ngc.nvidia.com/orgs/nvidia/containers/l4t-cuda/tags
ARG CUDA_VERSION=12.2.12
ARG BASE_CUDA_DEV_CONTAINER=nvcr.io/nvidia/l4t-cuda:${CUDA_VERSION}-devel
ARG BASE_CUDA_RUN_CONTAINER=nvcr.io/nvidia/l4t-cuda:${CUDA_VERSION}-runtime

# Setup build container
FROM ${BASE_CUDA_DEV_CONTAINER} AS build
ARG CUDA_DOCKER_ARCH=all
RUN apt-get -y update \
 && apt-get -y install build-essential software-properties-common git libgomp1 curl pkg-config \
 && add-apt-repository -y ppa:ubuntuhandbook1/ffmpeg6 \
 && apt-get -y update \
 && apt-get -y install libavcodec-dev libavdevice-dev libavfilter-dev libavutil-dev libswscale-dev libswresample-dev

# Install go
ARG GO_VERSION=1.22.5
ARG GO_ARCH=arm64
RUN curl -sL https://golang.org/dl/go${GO_VERSION}.linux-${GO_ARCH}.tar.gz | tar -C /usr/local -xz
ENV PATH=$PATH:/usr/local/go/bin

# Copy source
WORKDIR /app
COPY . .

# Make whisper-server
ENV CUDA_DOCKER_ARCH=${CUDA_DOCKER_ARCH}
ENV GGML_CUDA=1
RUN make -j$(nproc)

# Setup runtime container
FROM ${BASE_CUDA_RUN_CONTAINER} AS runtime
ARG CUDA_MAIN_VERSION=12.2
RUN apt-get -y update && apt-get -y upgrade && apt-get -y install libgomp1
COPY --from=build /app/build/whisper /usr/local/bin/whisper
ENV LD_LIBRARY_PATH=/usr/local/cuda-${CUDA_MAIN_VERSION}/compat:$LD_LIBRARY_PATH

# Expose
ENTRYPOINT [ "/usr/local/bin/whisper" ]
CMD [ "server", "--dir=/data" ]
